name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: Package version (e.g. v0.1.0)
        required: false

env:
  UP_API_TOKEN: ${{ secrets.UP_API_TOKEN }}
  UP_ROBOT_ID: ${{ secrets.UP_ROBOT_ID }}
  UP_ORG: ${{ secrets.UP_ORG }}
  DOCKER_BUILDX_VERSION: 'v0.11.2'
  IMAGE_TAG: ${{ inputs.version }}

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: yarn

      - name: Install dependencies
        run: |
          yarn install
          yarn install --immutable

      - name: Compile TypeScript
        run: yarn tsc

      - name: Build backend
        run: yarn build:backend

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true

      - name: Login to xpkg with robot
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: xpkg.upbound.io
          username: ${{ env.UP_ROBOT_ID }}
          password: ${{ env.UP_API_TOKEN }}

      # If a version wasn't explicitly passed as a workflow_dispatch input we
      # default to version v0.0.0-<git-commit-date>-<git-short-sha>, for example
      # v0.0.0-20231101115142-1091066df799. This is a simple implementation of
      # Go's pseudo-versions: https://go.dev/ref/mod#pseudo-versions.
      - name: Set Default Multi-Platform Package Version
        if: env.IMAGE_TAG == ''
        run: echo "IMAGE_TAG=v0.0.0-$(date -d@$(git show -s --format=%ct) +%Y%m%d%H%M%S)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV

      - name: Build & push multi-arch image
        # Use the version input if provided; otherwise default to “v0.0.1”
        run: |
          docker buildx build . \
            -f packages/backend/Dockerfile \
            --push \
            --platform linux/arm64,linux/amd64 \
            --tag xpkg.upbound.io/${UP_ORG}/backstage:${IMAGE_TAG}
